{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Documents\\\\Desktop\\\\msteams\\\\msteams-frontend\\\\src\\\\Dashboard\\\\components\\\\GroupCall\\\\GroupCall.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport GroupCallButton from '../GroupCallButton/GroupCallButton';\nimport { callStates } from '../../../store/actions/callActions';\nimport * as webRTCGroupCallHandler from '../../../utils/webRTC/webRTCGroupCallHandler';\nimport GroupCallRoom from '../GroupCallRoom/GroupCallRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupCall = props => {\n  const {\n    callState,\n    localStream,\n    groupCallActive,\n    groupCallStreams\n  } = props;\n\n  const createRoom = () => {\n    webRTCGroupCallHandler.createNewGroupCall();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!groupCallActive && localStream && callState !== callStates.CALL_IN_PROGRESS && /*#__PURE__*/_jsxDEV(GroupCallButton, {\n      onClickHandler: createRoom,\n      label: \"Create room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), groupCallActive && /*#__PURE__*/_jsxDEV(GroupCallRoom, {\n      groupCallStreams: groupCallStreams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n\n_c = GroupCall;\n\nconst mapStoreStateToProps = ({\n  call\n}) => ({ ...call\n});\n\nexport default connect(mapStoreStateToProps)(GroupCall);\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupCall\");","map":{"version":3,"sources":["C:/Users/akshi/OneDrive/Documents/Desktop/msteams/msteams-frontend/src/Dashboard/components/GroupCall/GroupCall.js"],"names":["React","connect","GroupCallButton","callStates","webRTCGroupCallHandler","GroupCallRoom","GroupCall","props","callState","localStream","groupCallActive","groupCallStreams","createRoom","createNewGroupCall","CALL_IN_PROGRESS","mapStoreStateToProps","call"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAO,KAAKC,sBAAZ,MAAwC,8CAAxC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BC,IAAAA,eAA1B;AAA2CC,IAAAA;AAA3C,MAAgEJ,KAAtE;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvBR,IAAAA,sBAAsB,CAACS,kBAAvB;AACD,GAFD;;AAIA,sBACE;AAAA,eACG,CAACH,eAAD,IAAoBD,WAApB,IAAmCD,SAAS,KAAKL,UAAU,CAACW,gBAA5D,iBACC,QAAC,eAAD;AAAiB,MAAA,cAAc,EAAEF,UAAjC;AAA6C,MAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGGF,eAAe,iBAAI,QAAC,aAAD;AAAe,MAAA,gBAAgB,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHtB;AAAA,kBADF;AAOD,CAdD;;KAAML,S;;AAgBN,MAAMS,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe,EAC1C,GAAGA;AADuC,CAAf,CAA7B;;AAIA,eAAef,OAAO,CAACc,oBAAD,CAAP,CAA8BT,SAA9B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GroupCallButton from '../GroupCallButton/GroupCallButton';\r\nimport { callStates } from '../../../store/actions/callActions';\r\nimport * as webRTCGroupCallHandler from '../../../utils/webRTC/webRTCGroupCallHandler';\r\nimport GroupCallRoom from '../GroupCallRoom/GroupCallRoom';\r\n\r\nconst GroupCall = (props) => {\r\n  const { callState, localStream, groupCallActive, groupCallStreams } = props;\r\n\r\n  const createRoom = () => {\r\n    webRTCGroupCallHandler.createNewGroupCall();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!groupCallActive && localStream && callState !== callStates.CALL_IN_PROGRESS &&\r\n        <GroupCallButton onClickHandler={createRoom} label='Create room' />}\r\n      {groupCallActive && <GroupCallRoom groupCallStreams={groupCallStreams} />}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStoreStateToProps = ({ call }) => ({\r\n  ...call\r\n});\r\n\r\nexport default connect(mapStoreStateToProps)(GroupCall);\r\n"]},"metadata":{},"sourceType":"module"}