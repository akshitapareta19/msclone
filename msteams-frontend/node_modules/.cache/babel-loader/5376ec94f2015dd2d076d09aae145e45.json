{"ast":null,"code":"import * as wss from '../wssConnection/wssConnection';\nimport store from '../../store/store';\nimport { setGroupCallActive, setCallState, callStates } from '../../store/actions/callActions';\nlet myPeer;\nlet myPeerId;\nexport const connectWithMyPeer = () => {\n  myPeer = new window.Peer(undefined, {\n    path: '/peerjs',\n    host: '/',\n    port: '5000'\n  });\n  myPeer.on('open', id => {\n    console.log('succesfully connected with peer server');\n    myPeerId = id;\n  });\n};\nexport const createNewGroupCall = () => {\n  wss.registerGroupCall({\n    username: store.getState().dashboard.username,\n    peerId: myPeerId\n  });\n  store.dispatch(setGroupCallActive(true));\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\n};","map":{"version":3,"sources":["C:/Users/akshi/OneDrive/Documents/Desktop/msteams/msteams-frontend/src/utils/webRTC/webRTCGroupCallHandler.js"],"names":["wss","store","setGroupCallActive","setCallState","callStates","myPeer","myPeerId","connectWithMyPeer","window","Peer","undefined","path","host","port","on","id","console","log","createNewGroupCall","registerGroupCall","username","getState","dashboard","peerId","dispatch","CALL_IN_PROGRESS"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,gCAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,kBAAT,EAA6BC,YAA7B,EAA2CC,UAA3C,QAA6D,iCAA7D;AAEA,IAAIC,MAAJ;AACA,IAAIC,QAAJ;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrCF,EAAAA,MAAM,GAAG,IAAIG,MAAM,CAACC,IAAX,CAAgBC,SAAhB,EAA2B;AAClCC,IAAAA,IAAI,EAAE,SAD4B;AAElCC,IAAAA,IAAI,EAAE,GAF4B;AAGlCC,IAAAA,IAAI,EAAE;AAH4B,GAA3B,CAAT;AAMAR,EAAAA,MAAM,CAACS,EAAP,CAAU,MAAV,EAAmBC,EAAD,IAAQ;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAX,IAAAA,QAAQ,GAAGS,EAAX;AACD,GAHD;AAID,CAXM;AAaP,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACtClB,EAAAA,GAAG,CAACmB,iBAAJ,CAAsB;AACpBC,IAAAA,QAAQ,EAAEnB,KAAK,CAACoB,QAAN,GAAiBC,SAAjB,CAA2BF,QADjB;AAEpBG,IAAAA,MAAM,EAAEjB;AAFY,GAAtB;AAKAL,EAAAA,KAAK,CAACuB,QAAN,CAAetB,kBAAkB,CAAC,IAAD,CAAjC;AACAD,EAAAA,KAAK,CAACuB,QAAN,CAAerB,YAAY,CAACC,UAAU,CAACqB,gBAAZ,CAA3B;AAGD,CAVM","sourcesContent":["import * as wss from '../wssConnection/wssConnection';\r\nimport store from '../../store/store';\r\nimport { setGroupCallActive, setCallState, callStates } from '../../store/actions/callActions';\r\n\r\nlet myPeer;\r\nlet myPeerId;\r\nexport const connectWithMyPeer = () => {\r\n  myPeer = new window.Peer(undefined, {\r\n    path: '/peerjs',\r\n    host: '/',\r\n    port: '5000'\r\n  });\r\n\r\n  myPeer.on('open', (id) => {\r\n    console.log('succesfully connected with peer server');\r\n    myPeerId = id;\r\n  });\r\n};\r\n\r\nexport const createNewGroupCall = () => {\r\n  wss.registerGroupCall({\r\n    username: store.getState().dashboard.username,\r\n    peerId: myPeerId\r\n  });\r\n  \r\n  store.dispatch(setGroupCallActive(true));\r\n  store.dispatch(setCallState(callStates.CALL_IN_PROGRESS));\r\n\r\n\r\n}\r\n;"]},"metadata":{},"sourceType":"module"}