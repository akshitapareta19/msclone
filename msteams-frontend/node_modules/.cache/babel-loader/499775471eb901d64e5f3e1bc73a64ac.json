{"ast":null,"code":"import socketClient from 'socket.io-client'; // import store from '../../store/store';\n// import * as dashboardActions from '../../store/actions/dashboardActions';\n\nconst SERVER = 'http://localhost:5000'; // const broadcastEventTypes = {\n//   ACTIVE_USERS: 'ACTIVE_USERS',\n//   GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\n// };\n\nlet socket;\nexport const connectWithWebSocket = () => {\n  socket = socketClient(SERVER);\n  socket.on('connection', () => {\n    console.log('succesfully connected with wss server');\n    console.log(socket.id);\n  }); // socket.on('broadcast', (data) => {\n  //   handleBroadcastEvents(data);\n  // });\n}; // export const registerNewUser = (username) => {\n//   socket.emit('register-new-user', {\n//     username: username,\n//     socketId: socket.id\n//   });\n// };\n// const handleBroadcastEvents = (data) => {\n//   switch (data.event) {\n//     case broadcastEventTypes.ACTIVE_USERS:\n//       const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\n//       store.dispatch(dashboardActions.setActiveUsers(activeUsers));\n//       break;\n//     default:\n//       break;\n//   }\n// }\n// ;","map":{"version":3,"sources":["C:/Users/akshi/OneDrive/Documents/Desktop/msteams/msteams-frontend/src/utils/wssConnection/wssConnection.js"],"names":["socketClient","SERVER","socket","connectWithWebSocket","on","console","log","id"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,kBAAzB,C,CACA;AACA;;AAEA,MAAMC,MAAM,GAAG,uBAAf,C,CAEA;AACA;AACA;AACA;;AAEA,IAAIC,MAAJ;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AACxCD,EAAAA,MAAM,GAAGF,YAAY,CAACC,MAAD,CAArB;AAEAC,EAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAwB,MAAM;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,EAAnB;AACD,GAHD,EAHwC,CAOxC;AACA;AACA;AAED,CAXM,C,CAcP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import socketClient from 'socket.io-client';\r\n// import store from '../../store/store';\r\n// import * as dashboardActions from '../../store/actions/dashboardActions';\r\n\r\nconst SERVER = 'http://localhost:5000';\r\n\r\n// const broadcastEventTypes = {\r\n//   ACTIVE_USERS: 'ACTIVE_USERS',\r\n//   GROUP_CALL_ROOMS: 'GROUP_CALL_ROOMS'\r\n// };\r\n\r\nlet socket;\r\n\r\nexport const connectWithWebSocket = () => {\r\n  socket = socketClient(SERVER);\r\n\r\n  socket.on('connection', () => {\r\n    console.log('succesfully connected with wss server');\r\n    console.log(socket.id);\r\n  });\r\n  // socket.on('broadcast', (data) => {\r\n  //   handleBroadcastEvents(data);\r\n  // });\r\n\r\n}\r\n;\r\n\r\n// export const registerNewUser = (username) => {\r\n//   socket.emit('register-new-user', {\r\n//     username: username,\r\n//     socketId: socket.id\r\n//   });\r\n// };\r\n\r\n// const handleBroadcastEvents = (data) => {\r\n//   switch (data.event) {\r\n//     case broadcastEventTypes.ACTIVE_USERS:\r\n//       const activeUsers = data.activeUsers.filter(activeUser => activeUser.socketId !== socket.id);\r\n//       store.dispatch(dashboardActions.setActiveUsers(activeUsers));\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n// }\r\n// ;\r\n"]},"metadata":{},"sourceType":"module"}