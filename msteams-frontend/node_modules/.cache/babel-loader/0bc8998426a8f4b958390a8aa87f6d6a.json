{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akshi\\\\OneDrive\\\\Documents\\\\Desktop\\\\msteams\\\\msteams-frontend\\\\src\\\\Dashboard\\\\components\\\\GroupCall\\\\GroupCall.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport GroupCallButton from '../GroupCallButton/GroupCallButton';\nimport { callStates } from '../../../store/actions/callActions';\nimport * as webRTCGroupCallHandler from '../../../utils/webRTC/webRTCGroupCallHandler';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GroupCall = props => {\n  const {\n    callState,\n    localStream\n  } = props;\n\n  const createRoom = () => {\n    webRTCGroupCallHandler.createNewGroupCall();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: localStream && callState !== callStates.CALL_IN_PROGRESS && /*#__PURE__*/_jsxDEV(GroupCallButton, {\n      onClickHandler: createRoom,\n      label: \"Create room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = GroupCall;\n\nconst mapStoreStateToProps = ({\n  call\n}) => ({ ...call\n});\n\nexport default connect(mapStoreStateToProps)(GroupCall);\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupCall\");","map":{"version":3,"sources":["C:/Users/akshi/OneDrive/Documents/Desktop/msteams/msteams-frontend/src/Dashboard/components/GroupCall/GroupCall.js"],"names":["React","connect","GroupCallButton","callStates","webRTCGroupCallHandler","GroupCall","props","callState","localStream","createRoom","createNewGroupCall","CALL_IN_PROGRESS","mapStoreStateToProps","call"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,UAAT,QAA2B,oCAA3B;AACA,OAAO,KAAKC,sBAAZ,MAAwC,8CAAxC;;;;AAGA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA6BF,KAAnC;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACrBL,IAAAA,sBAAsB,CAACM,kBAAvB;AAEH,GAHD;;AAIA,sBACE;AAAA,cACCF,WAAW,IAAID,SAAS,KAAKJ,UAAU,CAACQ,gBAAxC,iBACC,QAAC,eAAD;AAAiB,MAAA,cAAc,EAAEF,UAAjC;AAA6C,MAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAMH,CAbD;;KAAMJ,S;;AAcN,MAAMO,oBAAoB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAa,EACtC,GAAGA;AADmC,CAAb,CAA7B;;AAIA,eAAeZ,OAAO,CAACW,oBAAD,CAAP,CAA+BP,SAA/B,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GroupCallButton from '../GroupCallButton/GroupCallButton';\r\nimport { callStates } from '../../../store/actions/callActions';\r\nimport * as webRTCGroupCallHandler from '../../../utils/webRTC/webRTCGroupCallHandler';\r\n\r\n\r\nconst GroupCall = (props) => {\r\n    const { callState, localStream } = props;\r\n\r\n    const createRoom = () => {\r\n        webRTCGroupCallHandler.createNewGroupCall();\r\n\r\n    }\r\n    return(\r\n      <>\r\n      {localStream && callState !== callStates.CALL_IN_PROGRESS &&\r\n        <GroupCallButton onClickHandler={createRoom} label='Create room' />}\r\n      </>\r\n    );\r\n};\r\nconst mapStoreStateToProps = ({call}) => ({\r\n    ...call\r\n})\r\n\r\nexport default connect(mapStoreStateToProps) (GroupCall);"]},"metadata":{},"sourceType":"module"}